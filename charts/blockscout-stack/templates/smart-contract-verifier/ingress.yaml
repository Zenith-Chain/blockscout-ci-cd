{{- if .Values.scVerifier.enabled }}
{{- if .Values.scVerifier.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: internal-and-public
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/client-max-body-size: "500M"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "15m"
    cert-manager.io/cluster-issuer: "zerossl-prod"
    {{- range .Values.scVerifier.ingress.annotations }}
    {{ . }}
    {{- end}}
  name: {{ .Release.Name }}-sc-verifier-ingress
spec:
  rules:
  {{- range $key, $value := .Values.scVerifier.ports }}
    - host: {{ toYaml $value.host | indent 2 }}{{ pluck $.Values.global.env $.Values.scVerifier.ingress.host | first | default $.Values.scVerifier.ingress.host._default }}
      http:
        paths:
          - path: {{ toYaml $value.path | indent 2 }}
            pathType: {{ toYaml $value.pathType | indent 2 }}
            backend:
              service:
                name: sc-verifier-svc
                port:
                  number: {{ toYaml $value.number | indent 2 }}
  {{- end }}
  {{- if .Values.scVerifier.ingress.tls.enabled }}
  tls:
    - hosts:
      {{- range $key, $value := .Values.scVerifier.ports }}
        - {{ toYaml $value.host | indent 2 }}{{ pluck $.Values.global.env $.Values.scVerifier.ingress.host | first | default $.Values.scVerifier.ingress.host._default }}
      {{- end }}
      {{- if .Values.scVerifier.ingress.tls.createSecret }}
      secretName: {{ .Release.Name }}-sc-verifier-tls
      {{- end }}
  {{- end }}
{{- end }}
{{- end }}
