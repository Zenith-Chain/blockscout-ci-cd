{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  replicas: 1
  strategy:
    type: {{ .Values.postgres.strategy }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          resources:
          {{- with .Values.postgres.resources }}
            limits:
              memory: {{ pluck $.Values.global.env .limits.memory | first | default .limits.memory._default | quote }}
              cpu: {{ pluck $.Values.global.env .limits.cpu | first | default .limits.cpu._default | quote }}
            requests:
              memory: {{ pluck $.Values.global.env .requests.memory | first | default .requests.memory._default | quote }}
              cpu: {{ pluck $.Values.global.env .requests.cpu | first | default .requests.cpu._default | quote }}
          {{- end }}
          command: {{ .Values.postgres.command }}
          args: {{ .Values.postgres.args }}
          imagePullPolicy: "IfNotPresent"
          # {{- if .Values.postgres.args }}
          # args:
          # {{- end }}
          ports:
            - containerPort: {{ .Values.postgres.port }}
          env:
{{- include "postgres_env" . | indent 10 }}
          {{- if .Values.postgres.persistence }}
          volumeMounts:
            - mountPath: {{ .Values.postgres.mountPath }}
              name: postgredb
              subPath: postgres
      {{- if .Values.postgres.nodeSelector.enabled }}
      nodeSelector:
      {{- range $key, $value := .Values.postgres.nodeSelector.labels }}
        {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-pv-claim
          {{- end }}
---
{{- end }}
